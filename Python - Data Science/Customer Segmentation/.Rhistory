library(lubridate)
data(mtcars)
::page{title="View first 5 rows"}
head(mtcars, 5)
?ggplot()
?ggplot
ggplot(data = mtcars, aes(x=disp, y=mpg)) + geompoint()
library(ggplot2)
head(mtcars, 5)
ggplot(data = mtcars, aes(x=disp, y=mpg)) + geompoint()
ggplot(data = mtcars, aes(x=disp, y=mpg)) + geom_point()
library(ggplot2)
head(mtcars, 5)
ggplot(data = mtcars, aes(x=disp, y=mpg)) + geom_point(color= "red")
library(ggplot2)
head(mtcars, 5)
ggplot(data = mtcars, aes(x=disp, y=mpg)) + geom_point(color="blue")
install.packages("GGally")
# Create the matrix Z
Z <- matrix(c(-1.26, -0.39, 0.17,
-0.82, -1.38, -0.86,
0.93,  0.14, 1.27,
0.76,  1.14, -1.12,
0.32,  0.01, 0.56), nrow = 5, byrow = TRUE)
# Calculate the distance matrix
distance_matrix <- dist(Z)
# Extract the distance between the 2nd and 4th observations
distance_2nd_4th <- distance_matrix[2, 4]
# Create the matrix Z
Z <- matrix(c(-1.26, -0.39, 0.17,
-0.82, -1.38, -0.86,
0.93,  0.14, 1.27,
0.76,  1.14, -1.12,
0.32,  0.01, 0.56), nrow = 5, byrow = TRUE)
# Calculate the distance matrix
dist(Z)
data <- data("USArrests")
head(data) #show first rows
data <- USArrests
data <- USArrests
head(data)
?prcomp
str(data)
data <- USArrests
head(data)
str(data)
prcomp(data, center = TRUE, scale = TRUE)
data <- USArrests
head(data)
str(data)
data_pca <- prcomp(data, center = TRUE, scale = TRUE)
data <- USArrests
summary(data_pca)
fviz_eig(data_pca, addlables = TRUE, ylim = c(0,50), barfill = "darkred", barcolor = "red")
library(factoextra)
#install.packages("factoextra")
install.packages("factoextra")
install.packages("factoextra")
library(factoextra)
fviz_eig(data_pca, addlables = TRUE, ylim = c(0,50), barfill = "darkred", barcolor = "red")
data_pca$rotation
data <- USArrests
head(data)
str(data)
corr(data)
cor(data)
data <- USArrests
head(data)
str(data)
#check the correlation
cor(data)
pairs(data)
data_pca <- prcomp(data, center = TRUE, scale = TRUE)
summary(data_pca)
library(factoextra)
fviz_eig(data_pca, addlables = TRUE, ylim = c(0,50), barfill = "darkred", barcolor = "red")
data_pca$rotation
dat <- LifeCycleSavings
dat <- LifeCycleSavings
head(dat)
str(dat)
cor(dat)
pairs(dat)
#conduct PCA
dat_pca <- prcomp(dat, cente=TRUE, scale = TRUE)
dat_pca <- prcomp(dat, cente=TRUE, scale = TRUE)
summary(dat_pca)
library(ggbiplot)
install.packages("ggbiplot")
fviz_pca_biplot(dat_pca, label = rownames(LifeCycleSavings))
fviz_pca_biplot(dat_pca, labels = rownames(LifeCycleSavings))
fviz_pca_biplot(dat_pca, label = rownames(dat))
library(ggbiplot)
library(ggplot2)
ggbiplot(pca_life, labels=rownames(LifeCycleSavings))
library(ibawds)
install.packages("ibawds")
library(ibawds)
dat <- protein
str(dat)
library(ibawds)
dat <- protein
str(dat)
dat <- dat %>% column_to_rownames(var = "country") %>%
mutate(across(.cols = c(red_meat:fruit_veg), .fns = ~ scale(.x)[,1]))
library(ibawds)
dat <- protein
str(dat)
dat <- dat %>%
rownames_to_column(var = "country") %>%
mutate(across(.cols = c(red_meat:fruit_veg), .fns = ~ scale(.x)[,1]))
library(ibawds)
library(dplyr)
dat <- protein
str(dat)
dat <- dat %>%
rownames_to_column(var = "country") %>%
mutate(across(.cols = c(red_meat:fruit_veg), .fns = ~ scale(.x)[,1]))
library(ibawds)
library(dplyr)
dat <- protein
str(dat)
dat <- dat %>% column_to_rownames(var = "country") %>%
mutate(across(.cols = c(red_meat:fruit_veg), .fns = ~ scale(.x)[,1]))
install.packages("column_to_row")
library(ibawds)
library(dplyr)
dat <- protein
str(dat)
dat <- dat %>% column_to_rownames(var = "country") %>%
mutate(across(.cols = c(red_meat:fruit_veg), .fns = ~ scale(.x)[,1]))
library(ibawds)
library(dplyr)
dat <- protein
str(dat)
dat <- dat %>% column_to_rownames(var = "country") %>%
mutate(across(.cols = c(red_meat:fruit_veg), .fns = ~ scale(.x)[,1]))
\\
library(ibawds)
library(dplyr)
dat <- protein
str(dat)
country_names = dat$country
dat <- dat %>% column_to_rownames(var = "country") %>%
mutate(across(.cols = c(red_meat:fruit_veg), .fns = ~ scale(.x)[,1]))
library(ibawds)
library(dplyr)
dat <- protein
str(dat)
library(dplyr)
dat <- dat %>%
mutate(across(-country, ~ scale(.x)))
dat %>% sapply(mean) %>% round(2)
library(ibawds)
library(dplyr)
dat <- protein
str(dat)
library(dplyr)
dat <- dat %>% column_to_rownames(var = "country") %>%
mutate(across(.cols = c(red_meat:fruit_veg), .fns = ~ scale(.x)[,1]))
library(ibawds)
library(dplyr)
dat <- protein
str(dat)
library(dplyr)
library(tidyverse)
dat <- dat %>% column_to_rownames(var = "country") %>%
mutate(across(.cols = c(red_meat:fruit_veg), .fns = ~ scale(.x)[,1]))
dat %>% sapply(mean) %>% round(2)
sq(3)
sqr(3)
square(3)
sqrt(12 +(1+1)^2)
qnorm(1 - ((1 - 0.05) / 2))
?qnorm
qt(1 - 0.05/2, 25 - 1)
qt(0.95, 25 - 1)
?qt
qnorm(1 - alpha/2)
qnorm(1 - 0.05/2)
data(wine)
setwd("D:/Learning at Macquarie/Session 1, 2024/BUSA3020 - Advanced Analytics Techniques/BUSA3020 - Assignment 2")
df <- read_csv("assignment_dataset.csv", header = True)
df <- read.csv("assignment_dataset.csv", header = True)
df <- read.csv("assignment_dataset.csv", header = TRUE)
df <- read.csv("assignment_dataset.csv", header = TRUE)
head(df, 5)
install.packages("reticulate")
